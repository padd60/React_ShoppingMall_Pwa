{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","Cart.js"],"names":["Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Cart","state","useSelector","console","log","reducer","dispatch","useDispatch","map","item","index","id","name","quan","onClick","type","payload","alert"],"mappings":"sKAuCeA,EAnCYC,cAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,EACM,gHACHC,EAAoBC,YAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,EAAqBC,cAAK,QAAD,YAAC,eAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,IAGtBO,cAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,K,QCkDMI,UAnFf,SAAcT,GAEZ,IAAIU,EAAQC,aAAY,SAACD,GAAD,OAAWA,KACnCE,QAAQC,IAAIH,EAAMI,SAGlB,IAAIC,EAAWC,cAEf,OACE,8BACE,gCACE,eAAC,EAAD,CAAOjB,WAAW,KAAlB,UACE,gCACE,+BACE,mCACA,oDACA,8CACA,mDAGJ,gCACGW,EAAMI,QAAQG,KAAI,SAACC,EAAMC,GACxB,OACE,+BACE,6BAAKD,EAAKE,KACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,OACV,+BACE,wBACEC,QAAS,WACPX,QAAQC,IAAIK,EAAKE,IACjBL,EAAS,CACPS,KAAM,UACNC,QAAS,CAAEL,GAAIF,EAAKE,OAL1B,eAWA,wBACEG,QAAS,WACPR,EAAS,CACPS,KAAM,UACNC,QAAS,CAAEL,GAAIF,EAAKE,OAJ1B,oBAhBKD,YAgCA,IAAhBnB,EAAM0B,MACL,sBAAKlC,UAAU,aAAf,UACE,yGACA,wBACE+B,QAAS,WACPvB,EAAMe,SAAS,CAAES,KAAM,gBAF3B,6BAQA","file":"static/js/4.01f4b118.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nfunction Cart(props) {\n  // 신문법 훅 useSelector로 createStore에 담긴 모든 reducer 즉, 스테이트들 받아옴\n  let state = useSelector((state) => state);\n  console.log(state.reducer);\n\n  // createStore에 담긴 모든 reducer 즉, dispatch 즉 액션 받아옴\n  let dispatch = useDispatch();\n\n  return (\n    <div>\n      <div>\n        <Table responsive=\"md\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>상품명</th>\n              <th>수량</th>\n              <th>변경</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.reducer.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td>{item.id}</td>\n                  <td>{item.name}</td>\n                  <td>{item.quan}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        console.log(item.id);\n                        dispatch({\n                          type: \"addQuan\",\n                          payload: { id: item.id },\n                        });\n                      }}\n                    >\n                      +\n                    </button>\n                    <button\n                      onClick={() => {\n                        dispatch({\n                          type: \"delQuan\",\n                          payload: { id: item.id },\n                        });\n                      }}\n                    >\n                      -\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        {props.alert === true ? (\n          <div className=\"my-alert-2\">\n            <p>지금 구매하시면 신규할인 20%</p>\n            <button\n              onClick={() => {\n                props.dispatch({ type: \"alertClose\" });\n              }}\n            >\n              닫기\n            </button>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\n// 구버전 리덕스 state 받아오기 컴포넌트에서 props로 받아서 사용해야함\n// function propsChange(state) {\n//   console.log(state);\n//   return {\n//     state: state.reducer,\n//     alert: state.reducer2,\n//   };\n// }\n\n// export default connect(propsChange)(Cart);\n\nexport default Cart;\n"],"sourceRoot":""}