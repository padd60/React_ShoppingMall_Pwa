{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","index.js","data.js","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","basicState","id","name","quan","store","createStore","combineReducers","reducer","action","type","copy","findName","find","i","payload","push","reducer2","ReactDOM","render","StrictMode","basename","App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","shoeList","title","content","price","Detail","lazy","Cart","Pointer","styled","img","stockContext","React","createContext","ItemBox","props","history","useHistory","useContext","className","onClick","item","src","index","alt","width","Stock","stock","useState","shoes","shoesChange","stockChange","Navbar","bg","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","Divider","exact","path","Button","variant","Provider","value","map","axios","result","data","fallback"],"mappings":"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","file":"static/js/main.74e9aee9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\nlet basicState = [\n  { id: 0, name: \"멋진신발\", quan: 2 },\n  { id: 1, name: \"멋진신발2\", quan: 1 },\n  { id: 2, name: \"멋진신발3\", quan: 3 },\n];\n\nfunction reducer(state = basicState, action) {\n  if (action.type === \"addItem\") {\n    let copy = [...state];\n    let findName = copy.find((i) => {\n      return i.name == action.payload.name;\n    });\n    if (findName) {\n      findName.quan++;\n      return copy;\n    } else {\n      copy.push(action.payload);\n      return copy;\n    }\n  } else if (action.type === \"addQuan\") {\n    let copy = [...state];\n    console.log(action.payload.id);\n    copy[action.payload.id].quan++;\n\n    return copy;\n  } else if (action.type === \"delQuan\") {\n    let copy = [...state];\n    if (copy[action.payload.id].quan > 0) copy[action.payload.id].quan--;\n\n    return copy;\n  } else {\n    return state;\n  }\n}\n\nlet alertBasic = true;\n\nfunction reducer2(state = alertBasic, action) {\n  if (action.type === \"alertClose\") {\n    state = false;\n    return state;\n  }\n  return state;\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/React_ShoppingMall_Pwa\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","let shoeList = [\n  {\n    id: 0,\n    title: \"White and Black\",\n    content: \"Born in France\",\n    price: 120000,\n  },\n\n  {\n    id: 1,\n    title: \"Red Knit\",\n    content: \"Born in Seoul\",\n    price: 110000,\n  },\n\n  {\n    id: 2,\n    title: \"Grey Yordan\",\n    content: \"Born in the States\",\n    price: 130000,\n  },\n];\n\nexport default shoeList;\n","import React, { useContext, useState, lazy, Suspense } from \"react\";\nimport { Navbar, Container, Nav, NavDropdown, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport shoeList from \"./data\";\nimport styled from \"styled-components\";\n\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\n\nimport axios from \"axios\";\n// import Detail from \"./Detail.js\";\nlet Detail = lazy(() => {\n  return import(\"./Detail.js\");\n});\n\n// import Cart from \"./Cart.js\";\nlet Cart = lazy(() => {\n  return import(\"./Cart.js\");\n});\n\nlet Pointer = styled.img`\n  cursor: pointer;\n`;\n\nexport let stockContext = React.createContext();\n// 범위 생성(다른 파일의 컴포넌트에서 사용할 시 export 필요)\n\nfunction App() {\n  let [shoes, shoesChange] = useState(shoeList);\n  let [stock, stockChange] = useState([10, 11, 12, 15, 14, 20]);\n\n  // function dataAdd(data) {\n  //   let newData = [...shoes];\n  //   let addData = [...newData, ...data];\n  //   shoesChange(addData);\n  // }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand as={Link} to=\"/\">\n            ShoeShop\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              {/* <Nav.Link>\n                <Link to=\"/\">Home</Link>\n              </Nav.Link> */}\n              <Nav.Link as={Link} to=\"/\">\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/detail/0\">\n                Detail\n              </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {/* Switch태그로 감싸면 중복되는 url주소 있어도 상단에 작성된 하나만 보여줌 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"background\">\n            <h1>20% Season off</h1>\n            <p>jumbotron</p>\n            <p>\n              <Button variant=\"primary\">Primary</Button>\n            </p>\n          </div>\n          <div className=\"container\">\n            {/* 범위 생성 html */}\n            <stockContext.Provider value={stock}>\n              <div className=\"row\">\n                {shoes.map((item, index) => {\n                  return <ItemBox item={item} index={index} key={index} />;\n                })}\n              </div>\n            </stockContext.Provider>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                // 로딩중 UI\n\n                // axios post 요청 = 데이터 전송\n                // axios.post('서버URL', {id : \"아이디\", pw : 1234});\n\n                // axios get요청\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    // 로딩중 UI 안보이게\n                    //서버와 연결 성공했을때\n                    // result는 성공해서 받아온 모든 정보들이 담겨있는 객체\n                    shoesChange([...shoes, ...result.data]);\n                    // result.data는 결과 객체에서 데이터 프로퍼타에 해당하는 값만 가져옴\n                  })\n                  .catch(() => {\n                    //서버와 연결 실패했을때\n                    console.log(\"실패!\");\n                  });\n                //fetch도 위와 사용법은 거의 같음 대신 axios는 JSON파일의 \"\":\"\" 내용의 문자열에서\n                // \"\"를 제거하여 객체 타입으로 반환해주고 fetch 함수는 JSON 그대로 반환하기때문에 객체타입으로 변환하는 작업이 필요하다.\n                // fetch(\"https://codingapple1.github.io/shop/data2.json\")\n                //   .then((result) => {\n                //     console.log(result.data);\n                //   })\n                //   .catch();\n                // 위처럼 사용하면 undefined 출력됨, 객체타입으로 변환 필요\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n        <Route exact path=\"/detail/:id\">\n          <stockContext.Provider value={stock}>\n            <Suspense fallback={<div>로딩중입니다...</div>}>\n              <Detail\n                shoes={shoes}\n                shoesChange={shoesChange}\n                stock={stock}\n                stockChange={stockChange}\n              />\n            </Suspense>\n          </stockContext.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Suspense fallback={<div>로딩중입니다...</div>}>\n            <Cart />\n          </Suspense>\n        </Route>\n\n        <Route path=\"/:id\">\n          {/* :id 는 아무문자를 의미 */}\n          <div>아무거나 적었을때 이거 보여줌</div>\n        </Route>\n      </Switch>\n      {/* <Route path=\"~~~\" component={~~~}></Route> */}\n    </div>\n  );\n}\n\nfunction ItemBox(props) {\n  let history = useHistory();\n\n  // state 공유 범위 사용 변수\n  let stock = useContext(stockContext);\n\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.item.id);\n      }}\n    >\n      <Pointer\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" +\n          (props.index + 1) +\n          \".jpg\"\n        }\n        alt=\"상품이미지1\"\n        width=\"100%\"\n      />\n      <h4>{props.item.title}</h4>\n      <p>\n        {props.item.content} & {props.item.price}\n      </p>\n      <Stock index={props.index}></Stock>\n    </div>\n  );\n}\n\nfunction Stock(props) {\n  // state 공유 범위 사용 변수\n  let stock = useContext(stockContext);\n\n  // 부모의 context범위 안에 포함되어 있는 컴포넌트들은 전부 state값 공유 가능\n  // 공유 범위 사용 변수 작성 시...\n  return <p>재고 : {stock[props.index]}</p>;\n}\n\nexport default App;\n"],"sourceRoot":""}